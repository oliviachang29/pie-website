<p>The software system runs on two Arduinos. One Arduino controls the LED strip and uses the FastLED library to run through a series of default patterns. The other Arduino controls the movement of the arm.</p>
<p>We use the AccelStepper library to control the two motors. The AccelStepper library provides the MultiStepper class which allows us to manage multiple steppers. The MultiStepper.moveTo() function allows us to move the two steppers at the same time for simultaneous motion. moveTo() calculates the necessary respective speeds at which the two motors need to move to reach their desired respective positions at the same time.</p>
<p>The way we create patterns in the sand is by moving the ball between points in small, discrete steps. The function that moves our stepper motors takes in the desired radius and angle of the magnet in polar coordinates and uses inverse kinematics to compute the necessary motor steps to reach that point. The inverse kinematics are necessary because both motors are on the same shaftâ€”moving one motor moves the other.</p>
<img class="lazy img-centered" width="60%" src="assets/images/lazy.jpg" data-src="assets/images/software/image7.jpg">
<p>Rather than storing patterns as an array of points, we increase the angle in small increments of 5 degrees and calculate the resulting radius for the given pattern based on the current angle. A circle will return the same radius regardless of the angle, but a spiral pattern will increase and decrease the radius based on the current angle like so:</p>
<p>SPIRAL_SCALE * (currentAngle / 360.0) * MAX_RADIUS;</p>
<p>Where MAX_RADIUS is 165.0 * sqrt(2), and SPIRAL_SCALE is a value from 0 to 1 that determines the size of the spiral.</p>
<p><a href="https://github.com/oliviachang29/pie-sand-table">See the source code.</a></p>